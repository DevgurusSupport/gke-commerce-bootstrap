###########################
###########################
## Linter GitHub Actions ##
###########################
###########################
name: Lint Code Base

#
# Documentation:
# https://help.github.com/en/articles/workflow-syntax-for-github-actions
#

#############################
# Start the job on all push #
#############################
on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

###############
# Set the Job #
###############
jobs:
  lint:
    # Name the Job
    name: Lint Code Base
    # Set the agent to run on
    runs-on: ubuntu-latest

    ##################
    # Load all steps #
    ##################
    steps:
      ##########################
      # Checkout the code base #
      ##########################
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          # Full git history is needed to get a proper list of changed files within `super-linter`
          fetch-depth: 0

      ################################
      # Run Linter against code base #
      ################################
      - name: Lint Code Base
        id: lint
        uses: github/super-linter@v3.13.5
        env:
          VALIDATE_TERRAFORM: true
          # Terrascan reports some false positives. Disabling it for now
          # VALIDATE_TERRAFORM_TERRASCAN: true
          VALIDATE_YAML: true
          DEFAULT_BRANCH: master
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      #######################################
      # Post the linter output as a comment #
      #######################################
      - name: Comment Linting Output
        uses: actions/github-script@0.9.0
        if: github.event_name == 'pull_request'
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const output = `
          #### Linter plan finished
          Please find linting results [here](${{ steps.lint.outputs.stdout }})
          `

          github.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })
